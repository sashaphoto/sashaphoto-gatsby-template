{"version":3,"file":"component---src-pages-about-styling-tsx-89c66edce09e839b043b.js","mappings":"wLA2DA,UA9CqD,SAAC,GAAD,EAAGA,KAAH,EAASC,KAAT,OACnD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,gDACA,kGACwE,2CADxE,eAC4G,2CAD5G,oBAGA,2BACA,wDACA,uIAGA,2BACA,4CACA,oDACA,kHAAyF,uCAAzF,OAAiH,2CAAjH,4CACA,+CACA,2CAAkB,wBAAMC,UAAW,0BAAjB,WAAlB,0BAAkG,wBAAMA,UAAW,8BAAjB,eAAlG,oCAAoM,qCAApM,KAAqN,wBAAMA,UAAW,eAAjB,mBAArN,MAA8Q,wBAAMA,UAAW,yBAAjB,wBAC9Q,8DAAqC,wBAAMA,UAAW,8BAAjB,YAArC,KAAqG,wBAAMA,UAAW,6BAAjB,WAArG,KAAmK,wBAAMA,UAAW,2BAAjB,SAAnK,KAA6N,wBAAMA,UAAW,0BAAjB,QAA7N,KAAqR,wBAAMA,UAAW,0BAAjB,QAArR,MAA8U,wBAAMA,UAAW,4BAAjB,UAA9U,KAA0Y,wBAAMA,UAAW,6BAAjB,YAC1Y,mDACA,qBAAGA,UAAW,qBAAd,UACA,uBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,OAAQC,eAAgB,QAASJ,UAAW,eAAhF,QACA,qBAAGA,UAAW,yBAAd,cACA,uBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,OAAQC,eAAgB,QAASJ,UAAW,yBAAhF,QACA,qDACA,yIAAgH,qDAAhH,QAAuJ,uDAAvJ,KACA,2DACA,oGAA2E,8EAA3E,iBAAoJ,wBAAMA,UAAW,2BAAjB,2BAApJ,OAAkO,wBAAMA,UAAW,yBAAjB,0BAClO,8CACA,uMAA8K,qDAA9K,OAAoN,+CAApN,MAAmP,mDAAnP,mCAAmT,wCAAnT,yBAA8V,sCAA9V,QAAsX,2CAAtX,6DACA,2BACA,sDACA,sJAA6H,6CAA7H,iBAAqK,sDACrK,uDACA,0BACE,0BAAI,+CAAJ,yDACA,0BAAI,2CAAJ,2DACA,0BAAI,qDAAJ,0CACA,0BAAI,6CAAJ,+DACA,0BAAI,0CAAJ,8BACA,0BAAI,2CAAJ,wDAEF,gBAAC,EAAAK,KAAD,CAAMC,GAAG,IAAIN,UAAW,SAAxB","sources":["webpack://gatsby-starter-default/./src/pages/about-styling.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../utility/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst AboutStyling: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"ðŸŽ¨ Styling Guide\" />\n    <h2>How to start fresh</h2>\n    <p>\n      To throw away all my styles, simply delete all the .scss files except <code>styles.scss</code>, empty out <code>styles.scss</code> and you're set.\n    </p>\n    <hr/>\n    <h2>Reasons to not start fresh</h2>\n    <p>\n      These stylesheets are made to simplify your life while maintaining your potential to customize everything.\n    </p>\n    <hr/>\n    <h3>Auto-pallettes</h3>\n    <h4>Setting the base color</h4>\n    <p>Your probably have some colour you want to use as your accent color. Simply set it as <code>$accent</code> in <code>colors.scss</code> and your palette will be built for you.</p>\n    <h4>Generated Colours</h4>\n    <p>Your specified <code className={'background-accent-base'}>$accent</code> is used to generate a <code className={'background-complement-base'}>$complement</code>. Both of these colours generate <b>palettes</b>, <code className={'ShowPalette'}>$accent-palette</code> & <code className={'ShowComplementPalette'}>$complement-palette</code></p>\n    <p>Available tones for a palette are <code className={'background-accent-lightest'}>lightest</code>, <code className={'background-accent-lighter'}>lighter</code>, <code className={'background-accent-light'}>light</code>, <code className={'background-accent-base'}>base</code>, <code className={'background-accent-dark'}>dark</code>,  <code className={'background-accent-darker'}>darker</code>, <code className={'background-accent-darkest'}>darkest</code></p>\n    <h4>Your current palettes</h4>\n    <b className={'color-accent-base'}>Accent</b>\n    <div style={{width: '100%', height: '40px', marginBlockEnd: '10px'}} className={'ShowPalette'}>    </div>\n    <b className={'color-complement-base'}>Complement</b>\n    <div style={{width: '100%', height: '40px', marginBlockEnd: '10px'}} className={'ShowComplementPalette'}>    </div>\n    <h4>Using a palette in SCSS</h4>\n    <p>To use the palette defined by your base color, you can use one of the getter functions for a colour, such as <code>base($accent-palette)</code> or  <code>darker($accent-palette)</code>.</p>\n    <h4>Using a palette in HTML / JSX</h4>\n    <p>Classnames are auto generated for your accent and complement palette as <code>(background || color)-(name of palette)-(tone)</code>, for example <code className={'background-accent-light'}>background-accent-light</code> or <code className={'color-complement-base'}>color-complement-base</code></p>\n    <h4>Adding a palette</h4>\n    <p>If you need to go above and beyond the accent and complement, you can add another palette with full functionality by first assigning it to a variable in the same place in <code>colors-autotheme.scss</code> as <code>$accent-palette</code> & <code>$complement-palette</code> (line 232) and then adding the <code>@include</code> for your theme under <code>.color</code> and <code>.background</code> in the same way as it is done for accent and complement.</p>\n    <hr/>\n    <h4>Customizing base palette</h4>\n    <p>The palette is built by calculating offsets based on a starting \"base palette\". You can redefine this palette by changing <code>$base-palette</code> (line 58) of <code>colors-autotheme.scss</code></p>\n    <h3>Different files explained</h3>\n    <ul>\n      <li><code>animations.scss</code> defines keyframes and mixins for animated components</li>\n      <li><code>colors.scss</code> defines all the color variables (including DARK THEME)</li>\n      <li><code>colors-autotheme.scss</code> contains code for generating palettes</li>\n      <li><code>cssreset.scss</code> a css reset so that the app looks the same across browsers</li>\n      <li><code>fonts.scss</code> defines fonts for the app</li>\n      <li><code>styles.scss</code> the star of the show, our custom styling goes here</li>\n    </ul>\n    <Link to=\"/\" className={'Magic'}>Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default AboutStyling\n"],"names":["data","path","title","className","style","width","height","marginBlockEnd","Link","to"],"sourceRoot":""}